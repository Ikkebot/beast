<jittershader name="shady.jxs">
	<description>transform matrices</description>
	<param name="tex0" type="int" default="0" />
	<param name="tex1" type="int" default="1" />
>
	
	<language name="glsl" version="1.2">
		<bind param="tex0" program="vp" />
		<bind param="tex1" program="fp" />
		<program name="vp" type="vertex">
<![CDATA[

#version 120



uniform sampler2D tex0;

varying vec2 texcoord0;
varying vec2 Jit_Surface_texcoord1;

void main(void)
{

	Jit_Surface_texcoord1 = vec2(gl_TextureMatrix[1] * gl_MultiTexCoord0);
	
	
	texcoord0 = vec2(gl_TextureMatrix[0] * gl_MultiTexCoord0);
	float floheight = texture2D(tex0, texcoord0.xy).r;
	vec4 height = texture2D(tex0, texcoord0.xy);
	vec4 norm = normalize(vec4(gl_NormalMatrix * gl_Normal, 1.0));

	vec4 distort = gl_ModelViewMatrix * height;
	vec4 vert = gl_ModelViewMatrix * distort;
	vec4 pos = distort + norm * floheight;
	gl_FrontColor = gl_Color;
	gl_Position = gl_ProjectionMatrix * distort;

}
]]>
	</program>
	<program name="fp" type="fragment">
<![CDATA[

#version 120

uniform sampler2DRect tex1;
varying vec2 Jit_Surface_texcoord1;

void main (void)
{
	vec4 mytexture = texture2DRect(tex1, Jit_Surface_texcoord1);

	gl_FragColor = gl_Color * mytexture;
}

]]>
</program>
	</language>
</jittershader>